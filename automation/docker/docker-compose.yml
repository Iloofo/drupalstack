version: "3"

services:
    php:
        container_name: ${COMPOSE_PROJECT_NAME}_php
        build:
            context: ./php
            args:
                - APACHE_LOG_DIR=${APACHE_LOG_DIR}
                - DOCROOT_DIR=${DOCROOT_DIR}
                - WEB_USER=${WEB_USER}
                - WEB_GROUP=${WEB_GROUP}
        volumes:
            - ../scripts:/var/www/html/scripts:rw,delegated
            - ../../web:/var/www/html/web:rw,delegated
            - ../../vendor:/var/www/html/vendor:rw,delegated
            - ../../config:/var/www/html/config:rw,delegated
            - ../conf/settings.local.php:/var/www/html/web/sites/default/settings.local.php:rw,delegated
            - ../conf/development.services.yml:/var/www/html/web/sites/development.services.yml:rw,delegated
            - ../../composer.json:/var/www/html/composer.json:rw,delegated
            - ../../composer.lock:/var/www/html/composer.lock:rw,delegated
            - ./php/docker-php-upload.ini:/usr/local/etc/php/conf.d/docker-php-upload.ini
            - drupal-files:/var/www/html/web/sites/default/files
        environment:
            - MYSQL_DATABASE_DRUPAL=${MYSQL_DATABASE_DRUPAL}
            - MYSQL_USER_DRUPAL=${MYSQL_USER_DRUPAL}
            - MYSQL_PASSWORD_DRUPAL=${MYSQL_PASSWORD_DRUPAL}
            - MYSQL_HOST_DRUPAL=${MYSQL_HOST_DRUPAL}
            - MYSQL_PORT_DRUPAL=${MYSQL_PORT_DRUPAL}
        depends_on:
            - mysql

    apache:
        container_name: ${COMPOSE_PROJECT_NAME}_apache
        build:
            context: ./apache
            args:
                - APACHE_LOG_DIR=${APACHE_LOG_DIR}
                - APACHE_ROOT_DIR=${APACHE_ROOT_DIR}
                - APACHE_SERVER_NAME=localhost
                - DOCROOT_DIR=${DOCROOT_DIR}
                - DOCROOT_WEB_DIR=${DOCROOT_WEB_DIR}
                - WEB_USER=${WEB_USER}
                - WEB_GROUP=${WEB_GROUP}
        ports:
            - "8081:80"
        volumes:
            - ../../:/var/www/html:rw,delegated
            - drupal-files:/var/www/html/web/sites/default/files
        environment:
            - APACHE_ROOT_DIR
            - APACHE_SERVER_NAME
            - DOCROOT_DIR
            - DOCROOT_WEB_DIR
            - PHP_HOST
            - PHP_PORT
        depends_on:
            - php
        labels:
            - "traefik.frontend.rule=Host:${SITE_DOMAIN}"
            - "traefik.port=80"
            - "traefik.frontend.entryPoints=http"
            - "traefik.enable=true"

    mysql:
        container_name: ${COMPOSE_PROJECT_NAME}_mysql
        build:
            context: ./mysql
        #        volumes:
        #            - ./data/mysql:/var/lib/mysql:rw
        #            - ./entrypoint:/docker-entrypoint-initdb.d
        environment:
            - MYSQL_RANDOM_ROOT_PASSWORD=yes
            - MYSQL_DATABASE=${MYSQL_DATABASE_DRUPAL}
            - MYSQL_USER=${MYSQL_USER_DRUPAL}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD_DRUPAL}
        ports:
            - ${MYSQL_PORT_DRUPAL}:3306

    mailhog:
        image: mailhog/mailhog
        ports:
            - "1025:1025"
            - "8025:8025"
        labels:
            - "traefik.frontend.rule=Host:mailhog.${DOMAIN}"
            - "traefik.port=8025"
            - "traefik.frontend.entryPoints=http,https"
            - "traefik.enable=true"

    reverse-proxy:
        image: traefik
        command: --api --docker # Enables the web UI and tells Traefik to listen to docker
        ports:
            - "80:80"     # The HTTP port
            - "8080:8080" # The Web UI (enabled by --api)
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

volumes:
    drupal-files: